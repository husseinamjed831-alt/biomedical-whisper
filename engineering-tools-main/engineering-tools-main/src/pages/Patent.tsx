import React, { useState, useRef } from 'react';
import { FileCheck, Download, Lightbulb, Settings, Save } from 'lucide-react';
import { useLanguage } from '../context/LanguageContext';

interface PatentData {
  title: string;
  inventors: string;
  description: string;
  problem: string;
  solution: string;
  claims: string;
  category: string;
  keywords: string;
}

const Patent: React.FC = () => {
  const { t } = useLanguage();
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const [patentData, setPatentData] = useState<PatentData>({
    title: '',
    inventors: '',
    description: '',
    problem: '',
    solution: '',
    claims: '',
    category: 'medical-device',
    keywords: ''
  });
  const [generatedPatent, setGeneratedPatent] = useState<string>('');
  const [showPreview, setShowPreview] = useState(false);

  const categories = [
    { value: 'medical-device', label: 'Medical Device' },
    { value: 'diagnostic', label: 'Diagnostic Equipment' },
    { value: 'implant', label: 'Medical Implant' },
    { value: 'prosthetic', label: 'Prosthetic Device' },
    { value: 'pharmaceutical', label: 'Pharmaceutical' },
    { value: 'biotech', label: 'Biotechnology' },
    { value: 'software', label: 'Medical Software' },
    { value: 'other', label: 'Other' }
  ];

  const handleInputChange = (field: keyof PatentData, value: string) => {
    setPatentData(prev => ({ ...prev, [field]: value }));
  };

  const generatePatent = () => {
    const template = `
PATENT APPLICATION

Title: ${patentData.title}

Inventor(s): ${patentData.inventors}

Field of the Invention:
This invention relates to ${patentData.category.replace('-', ' ')} technology, specifically to ${patentData.title.toLowerCase()}.

Background of the Invention:
${patentData.problem}

Summary of the Invention:
${patentData.description}

Detailed Description:
The present invention addresses the problem by providing ${patentData.solution}

The key innovation lies in the combination of advanced biomedical engineering principles with practical implementation considerations.

Claims:
1. ${patentData.claims}

2. The device as claimed in claim 1, wherein the implementation ensures safety and efficacy for medical applications.

3. A method of using the device as claimed in claim 1, comprising the steps necessary for proper medical implementation.

Keywords: ${patentData.keywords}

Category: ${categories.find(c => c.value === patentData.category)?.label}

Abstract:
${patentData.description.slice(0, 250)}...

[This is a draft patent application generated by ME Whisper Platform]

IMPORTANT NOTICE:
This is a preliminary draft for educational purposes only. Professional legal review and formal patent prosecution are required before filing with patent offices.

Generated on: ${new Date().toLocaleDateString()}
Platform: ME Whisper - Biomedical Engineering Education Platform
    `.trim();

    setGeneratedPatent(template);
    setShowPreview(true);

    // Save to localStorage
    const patentRecord = {
      id: Date.now().toString(),
      ...patentData,
      content: template,
      createdAt: new Date().toISOString()
    };
    
    const existingPatents = JSON.parse(localStorage.getItem('patents') || '[]');
    existingPatents.push(patentRecord);
    localStorage.setItem('patents', JSON.stringify(existingPatents));
  };

  const downloadPatent = () => {
    const blob = new Blob([generatedPatent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `${patentData.title.replace(/\s+/g, '_')}_Patent_Draft.txt`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  const generateWatermarkedPNG = () => {
    const canvas = canvasRef.current;
    if (!canvas) return;

    const ctx = canvas.getContext('2d');
    if (!ctx) return;

    // Set canvas size
    canvas.width = 800;
    canvas.height = 1000;

    // White background
    ctx.fillStyle = '#ffffff';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    // Draw patent content
    ctx.fillStyle = '#000000';
    ctx.font = '20px Arial';
    ctx.textAlign = 'center';
    ctx.fillText('PATENT APPLICATION DRAFT', 400, 50);

    ctx.font = '16px Arial';
    ctx.textAlign = 'left';
    
    // Title
    ctx.font = 'bold 18px Arial';
    ctx.fillText(`Title: ${patentData.title}`, 50, 100);
    
    // Inventors
    ctx.font = '14px Arial';
    ctx.fillText(`Inventor(s): ${patentData.inventors}`, 50, 130);
    
    // Category
    const categoryLabel = categories.find(c => c.value === patentData.category)?.label || '';
    ctx.fillText(`Category: ${categoryLabel}`, 50, 160);
    
    // Description (wrapped text)
    ctx.font = '12px Arial';
    const maxWidth = 700;
    let y = 200;
    const lines = patentData.description.match(/.{1,80}(\s|$)/g) || [patentData.description];
    
    ctx.fillText('Description:', 50, y);
    y += 25;
    
    lines.slice(0, 10).forEach(line => {
      ctx.fillText(line.trim(), 50, y);
      y += 20;
    });

    // Watermark
    ctx.save();
    ctx.globalAlpha = 0.3;
    ctx.font = 'bold 30px Arial';
    ctx.textAlign = 'center';
    ctx.rotate(-Math.PI / 6);
    ctx.fillStyle = '#ff69b4';
    ctx.fillText('ME WHISPER DRAFT', 200, 600);
    ctx.fillText('NOT FOR FILING', 200, 650);
    ctx.restore();

    // Border
    ctx.strokeStyle = '#ff69b4';
    ctx.lineWidth = 3;
    ctx.strokeRect(10, 10, canvas.width - 20, canvas.height - 20);

    // Download PNG
    canvas.toBlob((blob) => {
      if (blob) {
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = `${patentData.title.replace(/\s+/g, '_')}_Patent_Visual.png`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url);
      }
    }, 'image/png');
  };

  return (
    <div className="p-6 max-w-6xl mx-auto">
      <div className="mb-8">
        <h1 className="text-4xl font-bold text-gray-900 mb-4 flex items-center">
          <FileCheck className="h-10 w-10 text-pink-500 mr-4" />
          Patent Generator
        </h1>
        <p className="text-xl text-gray-600">
          Generate draft patent applications for your biomedical engineering innovations
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Input Form */}
        <div className="bg-white rounded-2xl shadow-lg p-6">
          <h2 className="text-2xl font-bold text-gray-900 mb-6 flex items-center">
            <Lightbulb className="h-6 w-6 text-yellow-500 mr-2" />
            Patent Information
          </h2>

          <div className="space-y-6">
            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Invention Title *
              </label>
              <input
                type="text"
                value={patentData.title}
                onChange={(e) => handleInputChange('title', e.target.value)}
                placeholder="e.g., Smart Cardiac Monitoring Device"
                className="w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Inventor(s) *
              </label>
              <input
                type="text"
                value={patentData.inventors}
                onChange={(e) => handleInputChange('inventors', e.target.value)}
                placeholder="e.g., John Smith, Jane Doe"
                className="w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Category
              </label>
              <select
                value={patentData.category}
                onChange={(e) => handleInputChange('category', e.target.value)}
                className="w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent"
              >
                {categories.map((category) => (
                  <option key={category.value} value={category.value}>
                    {category.label}
                  </option>
                ))}
              </select>
            </div>

            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Problem Statement *
              </label>
              <textarea
                value={patentData.problem}
                onChange={(e) => handleInputChange('problem', e.target.value)}
                placeholder="Describe the problem your invention solves..."
                className="w-full h-24 p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent resize-none"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Solution Description *
              </label>
              <textarea
                value={patentData.solution}
                onChange={(e) => handleInputChange('solution', e.target.value)}
                placeholder="Explain how your invention solves the problem..."
                className="w-full h-24 p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent resize-none"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Detailed Description *
              </label>
              <textarea
                value={patentData.description}
                onChange={(e) => handleInputChange('description', e.target.value)}
                placeholder="Provide a detailed technical description of your invention..."
                className="w-full h-32 p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent resize-none"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Main Claim *
              </label>
              <textarea
                value={patentData.claims}
                onChange={(e) => handleInputChange('claims', e.target.value)}
                placeholder="Write the main claim of your patent..."
                className="w-full h-24 p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent resize-none"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Keywords
              </label>
              <input
                type="text"
                value={patentData.keywords}
                onChange={(e) => handleInputChange('keywords', e.target.value)}
                placeholder="e.g., biomedical, cardiac, monitoring, sensor"
                className="w-full p-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent"
              />
            </div>

            <button
              onClick={generatePatent}
              disabled={!patentData.title || !patentData.inventors || !patentData.description}
              className="w-full px-6 py-3 bg-gradient-to-r from-pink-500 to-blue-500 text-white font-semibold rounded-lg hover:shadow-md transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              Generate Patent Draft
            </button>
          </div>
        </div>

        {/* Preview/Output */}
        <div className="bg-white rounded-2xl shadow-lg p-6">
          <h2 className="text-2xl font-bold text-gray-900 mb-6 flex items-center">
            <Settings className="h-6 w-6 text-blue-500 mr-2" />
            Patent Preview
          </h2>

          {showPreview ? (
            <div>
              <div className="bg-gray-50 rounded-lg p-4 mb-6 max-h-96 overflow-y-auto">
                <pre className="text-sm text-gray-800 whitespace-pre-wrap font-mono">
                  {generatedPatent}
                </pre>
              </div>

              <div className="space-y-3">
                <button
                  onClick={downloadPatent}
                  className="w-full flex items-center justify-center px-6 py-3 bg-green-600 text-white font-semibold rounded-lg hover:bg-green-700 transition-colors"
                >
                  <Download className="h-5 w-5 mr-2" />
                  Download Text File
                </button>

                <button
                  onClick={generateWatermarkedPNG}
                  className="w-full flex items-center justify-center px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-colors"
                >
                  <Download className="h-5 w-5 mr-2" />
                  Download PNG (Watermarked)
                </button>
              </div>
            </div>
          ) : (
            <div className="text-center py-12">
              <FileCheck className="h-16 w-16 text-gray-300 mx-auto mb-4" />
              <p className="text-gray-500">
                Fill out the form and click "Generate Patent Draft" to see the preview
              </p>
            </div>
          )}
        </div>
      </div>

      {/* Hidden canvas for PNG generation */}
      <canvas ref={canvasRef} style={{ display: 'none' }} />

      {/* Disclaimer */}
      <div className="mt-8 bg-yellow-50 border border-yellow-200 rounded-2xl p-6">
        <div className="flex items-start">
          <Settings className="h-6 w-6 text-yellow-600 mr-4 mt-1 flex-shrink-0" />
          <div>
            <h3 className="font-semibold text-yellow-800 mb-2">Important Disclaimer</h3>
            <div className="text-yellow-700 text-sm space-y-2">
              <p>• This tool generates preliminary patent drafts for educational and brainstorming purposes only</p>
              <p>• Professional legal review and formal patent prosecution are required before filing</p>
              <p>• Consult with a qualified patent attorney for official patent applications</p>
              <p>• ME Whisper is not responsible for the validity or enforceability of generated content</p>
              <p>• Always conduct thorough prior art searches before filing patent applications</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Patent;